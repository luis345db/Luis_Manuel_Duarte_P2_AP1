@using Shared.Models
@page "/Details"
@page "/Details/{VehiculoId:int}"
@inject HttpClient httpClient
@inject IJSRuntime JSRuntime

<PageTitle>Eliminar Vehiculo</PageTitle>

<div class="card shadow">
    <div class="card-header">
        <h3>Informaci&oacute;n del Vehiculo</h3>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="row">
                <p>-VehiculoId: @vehiculo.VehiculoId</p>
                <p>-Fecha: @vehiculo.Fecha.ToString("dd/MM/yyyy")</p>
                <p>-Descripci&oacute;n: @vehiculo.Descripcion</p>
                <p>-Costo: @vehiculo.Costo</p>
                <p>-Gasto: @vehiculo.Gasto</p>
            </div>

        </div>
        <div class="card-header">
            <h3>Detalles del Vehiculo</h3>
        </div>
        <table class="table table-bordered table-hover">

            <thead>

                <tr>
                    <th>Id</th>
                    <th>Valor</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var detalle in ListaDetalles)
                {
                    <tr>
                        <td>@detalle.VehiculoId</td>
                        <td>@detalle.AccesorioId</td>
                        <td>@detalle.Valor.ToString("N2")</td>

                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="card-footer">
        <a href="Index" class="btn btn-secondary bi bi-arrow-left-square-fill ms-auto">Volver</a>
    </div>
</div>

@code {
    [Parameter]
    public int VehiculoId { get; set; }
    public Vehiculo vehiculo { get; set; } = new Vehiculo();
    public Vehiculos_Detalle Detalles { get; set; } = new Vehiculos_Detalle();
    public List<Vehiculos_Detalle> ListaDetalles = new List<Vehiculos_Detalle>();

    protected override async Task OnInitializedAsync()
    {
        if (VehiculoId > 0)
        {
            var vehiculoEncontrado = await httpClient.GetFromJsonAsync<Vehiculo>($"api/Vehiculoes/{VehiculoId}");
            if (vehiculoEncontrado != null)
            {
                vehiculo = vehiculoEncontrado;
                ListaDetalles = vehiculo.Detalle.ToList();
            }

        }
    }

    public async Task Buscar()
    {
        var vehiculoEncontrado = await httpClient.GetFromJsonAsync<Vehiculo>($"api/Vehiculoes/{vehiculo.VehiculoId}");
        if (vehiculoEncontrado != null)
        {
            vehiculo = vehiculoEncontrado;
        }
    }
}
